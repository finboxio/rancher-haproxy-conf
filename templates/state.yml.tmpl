{{- define "templated-url" }}
{{- $safe := (.url | replace "{port}" .port | replace "{index}" (printf "%d" .index) | replace "{environment}" .container.EnvironmentName | replace "{stack}" .container.StackName | replace "{service}" .container.ServiceName | replace "{uuid}" (trunc 8 .container.UUID) | replace "{ip}" (replace "." "-" .container.PrimaryIp)) }}
{{- $url := url $safe }}
- id: {{ regexReplaceAll "[^A-Za-z0-9]" $safe "_" }}
{{- if ne "" .retryon }}
  retryon: {{ .retryon }}
{{- end }}
{{- if ne "" .balance }}
  balance: {{ .balance }}
{{- end }}
  host: '{{ $url.Host }}'
{{- if ne "" $url.Scheme }}
  scheme: {{ $url.Scheme }}
{{- end }}
{{- if ne "" (trimSuffix "/" $url.Path) }}
  prefix: {{ trimSuffix "/" $url.Path }}
{{- end }}
{{- if ne "" $url.Username }}
  username: {{ $url.Username }}
{{- end }}
{{- if ne "" $url.Password }}
  password: {{ $url.Password }}
{{- end }}
{{- if ne 0 $url.Port }}
  port: {{ $url.Port }}
{{- end }}
{{- end -}}

{{- $uuids := dict "me" "me" "leader" "none" "parent" "unavailable" }}
{{- with self }}{{- with .Container }}
{{- $uuids := set $uuids "me" .UUID }}
{{- with .Parent }}
{{- $uuids := set $uuids "parent" .UUID }}
{{- end }}{{- end }}
{{- with .Service }}{{- with (first .Containers) }}
{{- $uuids := set $uuids "leader" .UUID }}
{{- end }}{{- end }}{{- end }}

uuid: {{ get $uuids "me" }}
leader: {{ get $uuids "leader" }}
parent: {{ get $uuids "parent" }}
{{- with (service).Parent }}
  {{- $default_domains := .Metadata.domains }}
  {{- $frontends := .Metadata.frontends }}
{{ .Metadata | yaml }}
  {{- $entries := dict "count" 0 }}
  {{- $my_stack := .Stack.Name }}
  {{- $my_service := .Name }}
  {{- range $i, $service := services }}
  {{- $config := (unflatten "." $service.Labels) }}
  {{- if hasKey $config $my_stack }}
  {{- $stack_labels := get $config $my_stack }}
  {{- if hasKey $stack_labels $my_service }}
  {{- $service_labels := get $stack_labels $my_service }}
  {{- $entries := set $entries "count" (add (get $entries "count") 1) }}
  {{- if le (get $entries "count") 1 }}

enabled: {{ if or (eq self.Host.State "active") (eq self.Host.State "activating") }}true{{ else }}false{{ end }}
{{- $healthcheckers := (service "healthcheck.healthcheck").Containers }}
{{- $validCheckers := dict "count" 0 }}
healthcheckers:
  {{- range $i, $container := $healthcheckers }}
  {{- if $container.PrimaryIp }}
  {{- if and (ne $container.Host nil) (ne $container.Host.Name self.Host.Name) }}
  {{- $validCheckers := set $validCheckers "count" (add (get $validCheckers "count") 1) }}
  {{- end }}
  - ip: {{ $container.PrimaryIp }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if eq (get $validCheckers "count") 0 }} []{{- end }}
{{- end }}

entries:
  {{- end }}

  {{- $ports_or_frontends := keys $service_labels }}
  - stack: {{ .Stack.Name }}
    service: {{ .Name }}
    {{- if gt (len $service.Containers) 0 }}
    containers:
      {{- range $i, $container := $service.Containers }}
      {{- if $container.PrimaryIp }}
      - index: {{ $container.CreateIndex }}
        ip: {{ $container.PrimaryIp }}
        state: {{ default "unknown" $container.State }}
        health: {{ default "unknown" $container.HealthState }}
        ingress:
          {{- range $port_or_frontend := $ports_or_frontends }}
          {{- $pf_config := hasKey $frontends $port_or_frontend | ternary (dict "frontend" $port_or_frontend "port_config" (get $service_labels $port_or_frontend)) (dict "frontend" (get (get $service_labels $port_or_frontend) "frontend") "port_config" (dict $port_or_frontend (get $service_labels $port_or_frontend))) }}
          {{- $frontend := regexReplaceAll "[-/:]" (get $pf_config "frontend") "_" }}
          {{- range $port, $port_config := (get $pf_config "port_config") }}
          - port: {{ $port }}
            {{- if or (gt (len $default_domains) 0) (hasKey $port_config "domain") (hasKey $port_config "domains") }}
            frontend:
              name: {{ regexReplaceAll "[^A-Za-z0-9]" $frontend "_" }}
              {{- if (hasKey $frontends $frontend) | not }}
              port: {{ index (splitList "_" $frontend) 0 }}
              protocol: {{ index (splitList "_" $frontend) 1 }}
              {{- end }}
              {{- if hasKey $frontends $frontend }}
              {{- get $frontends $frontend | yaml | nindent 14 }}
              {{- end }}
            domains:
              {{- range $domain := $default_domains }}
                {{- include "templated-url" (dict "url" (trim $domain) "index" $i "port" $port "container" $container "retryon" (get $port_config "retryon") "balance" (get $port_config "balance")) | indent 14 }}
              {{- end }}
              {{- if hasKey $port_config "domains" }}
                {{- range $part := split "," (get $port_config "domains") }}
                {{- include "templated-url" (dict "url" (trim $part) "index" $i "port" $port "container" $container "retryon" (get $port_config "retryon") "balance" (get $port_config "balance")) | indent 14 }}
                {{- end }}
              {{- end }}
              {{- if hasKey $port_config "domain" }}
                {{- range $part := split "," (get $port_config "domain") }}
                {{- include "templated-url" (dict "url" (trim $part) "index" $i "port" $port "container" $container "retryon" (get $port_config "retryon") "balance" (get $port_config "balance")) | indent 14 }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
    {{- end }}

  {{- end }}
  {{- end }}
  {{- end }}
{{- end -}}
